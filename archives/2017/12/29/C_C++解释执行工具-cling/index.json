{"summary":"<p>为了方便学习C/C++，今天突然想到如果有一个类似于 Python、Node、Ruby 这些脚本语言的交互式的环境可以使用，那应该是非常棒的学习C/C++体验，特别适用于初学者。</p>\n<p>现在 Java 9 都提供了这样的功能，我们学习 C/C++ 也不能落后呀😄</p>\n<a id=\"more\"></a>\n<p>于是Google搜索了相关资料，在这里 <a href=\"https://stackoverflow.com/questions/584714/is-there-an-interpreter-for-c\" target=\"_blank\" rel=\"noopener\">is-there-an-interpreter-for-c</a> 找到了很多类似的工具，如 <a href=\"https://github.com/root-project/cling\" target=\"_blank\" rel=\"noopener\">cling</a>、<a href=\"http://www.softintegration.com/products/chstandard/\" target=\"_blank\" rel=\"noopener\">Ch standard</a>、<a href=\"http://bellard.org/tcc/\" target=\"_blank\" rel=\"noopener\">TCC</a>、<a href=\"https://github.com/zsaleeba/picoc\" target=\"_blank\" rel=\"noopener\">picoc</a>、<a href=\"http://www.hanno.jp/gotom/Cint.html\" target=\"_blank\" rel=\"noopener\">Cint</a>、<a href=\"http://www.artificialworlds.net/wiki/IGCC/IGCC\" target=\"_blank\" rel=\"noopener\">iGCC</a>、<a href=\"https://github.com/asvitkine/ccons\" target=\"_blank\" rel=\"noopener\">ccons</a>、<a href=\"https://github.com/AbsInt/CompCert\" target=\"_blank\" rel=\"noopener\">CompCert</a> 等，看了一下这些项目最近的活跃度，最活跃的是<a href=\"https://github.com/root-project/cling\" target=\"_blank\" rel=\"noopener\">cling</a>。</p>\n<p>从 <a href=\"https://root.cern.ch/download/cling/\" target=\"_blank\" rel=\"noopener\">https://root.cern.ch/download/cling/</a> 可以下载到编译好的安装包，但只有Linux、MacOS版本的，因为有时候会用到Windows，所以就想找找看，但网上虽然有编译脚本、教程(<a href=\"https://root.cern.ch/cling-build-instructions\" target=\"_blank\" rel=\"noopener\">cling-build-instructions</a>、<a href=\"https://github.com/root-project/cling/issues/186\" target=\"_blank\" rel=\"noopener\">The (Failed) Adventures in building Cling under Windows 10 with VS2017</a>)，但没有提供下载的，所以就自己编译了一个。</p>\n<p>我的编译过程参考<a href=\"https://root.cern.ch/cling-build-instructions\" target=\"_blank\" rel=\"noopener\">cling-build-instructions</a>如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone http://root.cern.ch/git/llvm.git src</span><br><span class=\"line\">cd src</span><br><span class=\"line\">git checkout cling-patches</span><br><span class=\"line\">cd tools</span><br><span class=\"line\">git clone http://root.cern.ch/git/cling.git</span><br><span class=\"line\">git clone http://root.cern.ch/git/clang.git</span><br><span class=\"line\">cd clang</span><br><span class=\"line\">git checkout cling-patches</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 这一步需要切换到src外层目录</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">cd</span> ../..</span></span><br><span class=\"line\">cd ../../..</span><br><span class=\"line\">mkdir build</span><br><span class=\"line\">cd build</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> add parallel build support</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> https://stackoverflow.com/questions/601970/how-do-i-utilise-all-the-cores-for-nmake</span></span><br><span class=\"line\">set CL=/MP</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 我在src、build同级目录新建了一个release目录用来存放编译好的文件，即安装文件位置</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> cmake -DCMAKE_INSTALL_PREFIX=[Install Path] -DCMAKE_BUILD_TYPE=[Build configuration, e.g. Release or Debug] ..\\src</span></span><br><span class=\"line\">cmake -DCMAKE_INSTALL_PREFIX=../release -DCMAKE_BUILD_TYPE=Release ..\\src</span><br><span class=\"line\">cmake --build .</span><br><span class=\"line\">cmake --build . --target install</span><br></pre></td></tr></table></figure>\n"}