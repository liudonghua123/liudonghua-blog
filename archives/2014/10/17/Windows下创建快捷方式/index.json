{"summary":"<p>在Windows下创建快捷方式，可以右键-新建-快捷方式，然后指向目的位置，或者右键拖拽文件或文件夹到目的位置，释放右键选择创建快捷方式，但这种方式创建的快捷方式是有后缀的（lnk后缀），并且不能修改（move修改后就变成一个打不开的文件）。</p>\n<a id=\"more\"></a>\n<p>那Windows有没有与Linux/Unix类似的命令行工具可以创建不带后缀的快捷方式吗？<br>答案就是mklink</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mklink</span><br><span class=\"line\"></span><br><span class=\"line\">Creates a symbolic link.</span><br><span class=\"line\"></span><br><span class=\"line\">MKLINK [[/D] | [/H] | [/J]] Link Target</span><br><span class=\"line\">/D Creates a directory symbolic link. Default is a file symbolic link.</span><br><span class=\"line\">/H Creates a hard link instead of a symbolic link.</span><br><span class=\"line\">/J Creates a Directory Junction.</span><br><span class=\"line\">Link specifies the new symbolic link name.</span><br><span class=\"line\">Target specifies the path (relative or absolute) that the new link refers to.</span><br></pre></td></tr></table></figure>\n<p>/D、/H、/J选项只能用一个<br>/H 创建硬链接，只能针对文件，如果是文件夹，则会提示”Access is denied.”<br>/D、/J 只能针对文件夹，如果是文件则创建之后快捷方式是文件夹图标，点击提示”xxx is not accessable. The directory is invalid”</p>\n<p>下面就说一下/D /J的区别<br>/D /J在本地时几乎没区别<br>如我创建了两个访问相同目标的链接，访问时没有任何区别</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\android&gt;dir</span><br><span class=\"line\">Volume in drive D is Program</span><br><span class=\"line\">Volume Serial Number is 04D9-9235</span><br><span class=\"line\">Directory of D:\\android</span><br><span class=\"line\">2014-10-17 10:51 &lt;DIR&gt; .</span><br><span class=\"line\">2014-10-17 10:51 &lt;DIR&gt; ..</span><br><span class=\"line\">2014-09-11 21:11 &lt;DIR&gt; android-ndk-r10b</span><br><span class=\"line\">2014-10-17 10:28 &lt;JUNCTION&gt; android-sdk-directory-Junction [D:\\android\\android-studio\\sdk]</span><br><span class=\"line\">2014-10-17 10:27 &lt;SYMLINKD&gt; android-sdk-directory-symbolic-link [D:\\android\\android-studio\\sdk]</span><br><span class=\"line\">2014-10-17 10:26 &lt;DIR&gt; android-studio</span><br><span class=\"line\">0 File(s) 0 bytes</span><br><span class=\"line\">6 Dir(s) 125,838,143,488 bytes free</span><br></pre></td></tr></table></figure>\n<p>但这两者确实存在着一些区别，详见<a href=\"http://superuser.com/questions/343074/directory-junction-vs-directory-symbolic-link\" target=\"_blank\" rel=\"noopener\">directory-junction-vs-directory-symbolic-link</a></p>\n<ol>\n<li>/D需要管理员权限，/J普通权限即可</li>\n<li>如果访问远程电脑上的Directory Symbolic Link，其解析实在远程电脑上，而如果是Directory Junction Link，则其解析是本地，例如在Alice电脑上<br>C:/juncationlink -&gt; C:/onesharedirectory<br>C:/symboliclink  -&gt; C:/onesharedirectory<br>这时如果在Bob电脑上访问这两个目录<br>\\Alice\\c$\\juncationlink -&gt; \\Alice\\c$\\onesharedirectory<br>\\Alice\\c$\\symboliclink  -&gt; \\Bob\\c$\\onesharedirectory<br>显然使用symboliclink是访问错误的</li>\n</ol>\n<p>/D /J 两者都还有一个共同点，可以未卜先知，及可以创建一个当时不存在的链接，而/H就不行</p>\n"}